#version 400

in vec3 textureCoords;
out vec4 out_Color;

uniform samplerCube cubeMap;
uniform samplerCube cubeMap2;
uniform float blendFactor;
uniform vec3 fogColour;

const float lowerlimit=0.0;
const float upperlimit=0.0;
const int lightlv=4;

void main(void){
   
   float TempBlendFactor=smoothstep(0,12,blendFactor);
   vec4 texture1 = texture(cubeMap, textureCoords);
   vec4 texture2 = texture(cubeMap2, textureCoords);
   vec4 final=mix(texture1,texture2,TempBlendFactor);
   //float Amount=(final.r + final.g + final.b)/3;
   //Amount = floor(Amount*lightlv)/lightlv;
   //out_Color.rgb=Amount*fogColour;

	float factor=(textureCoords.y-lowerlimit)/(upperlimit-lowerlimit);
	factor=clamp(factor,0.0,1.0);
	out_Color=mix( vec4(fogColour,1.0),final,factor);
}